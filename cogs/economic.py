#imports
from discord.ext import commands, tasks
from itertools import cycle 
from datetime import datetime
from pymongo import MongoClient
import datetime
import io
import discord
import os
import traceback
class Econom(commands.Cog):
	"""docstring for User"""
	def __init__(self, client):
		self.client = client
		self.prefix = MongoClient("mongodb+srv://limonix:1q234567wE@cluster0.tthbn.mongodb.net/Guild?retryWrites=true&w=majority")
		self.prefixes = self.prefix.Guild.prefixes
		self.cluster = MongoClient("mongodb+srv://limonix:1q234567wE@cluster0.tthbn.mongodb.net/lim?retryWrites=true&w=majority")
		self.collection = self.cluster.lim.post
		self.users = MongoClient("mongodb+srv://limonix:1q234567wE@cluster0.tthbn.mongodb.net/member?retryWrites=true&w=majority")
		self.userinfo = self.users.member.information

	@commands.command(aliases=['setprefix'])
	@commands.has_permissions( administrator = True )
	async def prefix(self, ctx, arg: str = None):
		if arg is None:
			emb = discord.Embed(title = "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–µ—Ñ–∏–∫—Å–∞", description = "–í–≤–µ–¥–∏—Ç–µ –ø—Ä–µ—Ñ–∏–∫—Å, –Ω–∞ –∫–∞–∫–æ–π —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å?", colour = discord.Color.red())
			emb.add_field(name = "–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–º–∞–Ω–¥—ã", value = f"{ctx.prefix}prefix <–≤–∞—à –ø—Ä–µ—Ñ–∏–∫—Å>")
			await ctx.send(embed = emb)
		elif len(str(arg)) > 5:
			emb = discord.Embed(title = "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–µ—Ñ–∏–∫—Å–∞", description = "–í–≤–µ–¥–∏—Ç–µ –ø—Ä–µ—Ñ–∏–∫—Å –Ω–µ –±–æ–ª—å—à–µ 5-—Ç–∏ —Å–∏–º–≤–æ–ª–æ–≤", colour = discord.Color.red())
			emb.add_field(name = "–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–º–∞–Ω–¥—ã", value = f"{ctx.prefix}prefix <–≤–∞—à –ø—Ä–µ—Ñ–∏–∫—Å>")
			await ctx.send(embed = emb)
		else:
			self.prefixes.update_one({"_guild_id": ctx.guild.id}, {"$set": {"prefix": arg}})
			
			emb = discord.Embed(title = "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–µ—Ñ–∏–∫—Å–∞", description = f"–ü—Ä–µ—Ñ–∏–∫—Å —Å–µ—Ä–≤–µ—Ä–∞ –±—ã–ª –æ–±–Ω–æ–≤–ª—ë–Ω –Ω–∞: {arg}", colour = discord.Color.green())
			await ctx.send(embed = emb)
	@commands.command(aliases=['welcome'])
	@commands.has_permissions( administrator = True )
	async def setwelchannel(self, ctx, channel: discord.TextChannel=None):
		
		if channel is None:
			await ctx.send(
				embed=discord.Embed(
					title="–ö–∞–Ω–∞–ª –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è",
					description="–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∫–∞–Ω–∞–ª",
					colour=discord.Color.red()
					)

				)
		else:
			if type(channel) == discord.TextChannel:
				self.prefixes.update_one({"_guild_id": ctx.guild.id}, {"$set": {"welcome": int(channel.id)}})
				await ctx.send(
					embed=discord.Embed(
						title="–£—Å–ø–µ—à–Ω–æ",
						description=f"–í—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –∫–∞–Ω–∞–ª –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å–≤–∏–π <#{channel.id}>",
						colour=discord.Color.gold()
						)
					)
			else:
				await ctx.send(
					embed=discord.Embed(
						title="–ö–∞–Ω–∞–ª –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å–≤–∏–π",
						description="–£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª!",
						colour=discord.Color.red()
						)
					)
	@commands.command(aliases=['–±–∞–ª–∞–Ω—Å'])
	async def balance(self, ctx, member:discord.Member=None):
		member = member or ctx.author
		if type(member) == discord.Member:
			user={
				'id':member.id,
				'guild_id':ctx.guild.id,
				'cash':0,
				'rep':0,
				'limoncoin':0,
				'xp':0,
				'lvl':0,
				'nummessage':0
			}
			if collection.count_documents({'id':member.id, 'guild_id':ctx.guild.id})==0:
				collection.insert_one(user)

			emb = discord.Embed(
				colour=discord.Color.gold()
				)
			emb.add_field(
				name=f"–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.name}",
				value=f"""Limoncoin: {self.collection.find_one({"id":member.id, "guild_id": ctx.guild.id})['limoncoin']}
–ú–æ–Ω–µ—Ç: {self.collection.find_one({'id':member.id, 'guild_id':ctx.guild.id})}"""
				)
			await ctx.send(embed=emb)
		else:
			user={
				'id':ctx.author.id,
				'guild_id':ctx.guild.id,
				'cash':0,
				'rep':0,
				'limoncoin':0,
				'xp':0,
				'lvl':0,
				'nummessage':0
			}
			if collection.count_documents({'id':ctx.author.id, 'guild_id':ctx.guild.id})==0:
				collection.insert_one(user)

			emb = discord.Embed(
				colour=discord.Color.gold()
				)
			emb.add_field(
				name=f"–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {ctx.author.name}",
				value=f"""LimonCoin: {self.collection.find_one({"id":ctx.author.id, "guild_id": ctx.guild.id})['limoncoin']}
KiwiCoin: {self.collection.find_one({'id':ctx.author.id, 'guild_id':ctx.guild.id})}"""
				)
			await ctx.send(embed=emb)
	@commands.command(aliases=['addmoney'])
	@commands.has_permissions(administrator=True)
	async def award(self, ctx, member:discord.Member=None, amount:int = None):
		lim = self.collection.find_one({"id":ctx.author.id, "guild_id": ctx.guild.id})['limoncoin']
		Kiwi = self.collection.find_one({"id":ctx.author.id, "guild_id": ctx.guild.id})['cash']
		if member is None:
			await ctx.send(
				embed=discord.Embed(
					title="–ü–æ–ø–æ–ª–Ω–∏—Ç—å",
					description="–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!",
					colour=discord.Color.red()
					)
				)
		elif amount is None:
			await ctx.send(
				embed=discord.Embed(
					title="–ü–æ–ø–æ–ª–Ω–∏—Ç—å",
					description="–í—ã –Ω–µ—É–∫–∞–∑–∞–ª–∏ –∫–æ–ª-–≤–æ –º–æ–Ω–µ—Ç –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é",
					colour=discord.Color.red()
					)
				)
		else:
			if type(member) == discord.Member:
				msg=await ctx.send(
					embed=discord.Embed(
						title="–ü–æ–ø–æ–ª–Ω–∏—Ç—å",
						description="""–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫—É—é –≤–∞–ª—é—Ç—É —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å:
LimonCoin: üçã 
KiwiCoin: ü•ù""",)

					)
				await msg.add_reaction('ü•ù')
				await msg.add_reaction('üçã')
				def check(reaction, user):
					return user == ctx.author
				reaction, user = await self.client.wait_for('reaction_add', check = check)
				if str(reaction.emoji) == 'ü•ù':

					self.prefixes.update_one({"_guild_id": ctx.guild.id}, {"$set": {"coin": Kiwi + amount}})
					await ctx.send(
						embed=discord.Embed(
							title="–£—Å–ø–µ—à–Ω–æ",
							description=f"–í—ã –ø–æ–ø–æ–ª–Ω–∏–ª–∏ –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {member.name}",
							colour=discord.Member.color
							)
						)
				if str(reaction.emoji) == 'üçã':
					self.prefixes.update_one({"_guild_id": ctx.guild.id}, {"$set": {"limoncoin": lim + amount}})
					await ctx.send(
						embed=discord.Embed(
							title="–£—Å–ø–µ—à–Ω–æ",
							description=f"–í—ã –ø–æ–ø–æ–ª–Ω–∏–ª–∏ –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {member.name}",
							colour=discord.Member.color
							)
						)
			else:
				await ctx.send(
					embed=discord.Embed(
						title="–ü–æ–ø–æ–ª–Ω–∏—Ç—å",
						description="–£–∫–∞–∂–∏—Ç–µ **–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è**!",
						colour=discord.Color.red()
						)
					)
	@award.error
	async def award_error(self, ctx, error):
		if isinstance(error, commands.UserInputError):
			await ctx.send(
				embed=discord.Embed(
					title="–ü–æ–ø–æ–ª–Ω–∏—Ç—å",
					description="–£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–ª–æ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é!",
					colour=discord.Color.red()
					))
	# @commands.command(aliases=['–æ—Å–µ–±–µ'])
	# async def osebe(self, ctx, *, text = None):
	# 	members = {
	# 		'member_id':ctx.author.id,
	# 		'info': f'–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ',
	# 		'second_half': '–ù–µ—Ç—É'
	# 		}
	# 	if userinfo.count_documents({'member_id':ctx.author.id})==0:
	# 		userinfo.insert_one(members)
	# 	if text is None:
	# 		await ctx.sned(
	# 			embed=discord.Embed(
	# 				title="–û —Å–µ–±–µ",
	# 				description="–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —Ç–µ–∫—Å—Ç",
	# 				colour=discord.Color.red()
	# 				)
	# 			)
	# 	else:
	# 		if len(text) > 200:
	# 			await ctx.send(
	# 				embed=discord.Embed(
	# 					title="–û—Å–µ–±–µ",
	# 					description="–í –≤–∞—à–µ–π –±–∏–æ–≥—Ä–∞—Ñ–∏–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 200 —Å–∏–º–≤–æ–ª–æ–≤"
	# 					)
	# 				)
	# 		else:
	# 			self.userinfo.update_one({"member_id":ctx.author.id}, {"$set": {"info": text}})
	# 			await ctx.send(
	# 				embed=discord.Embed(

	# 					title="–£—Å–ø–µ—à–Ω–æ",
	# 					description="–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–º–µ–Ω—è–ª–∏ —Å–≤–æ—é –±–∏–æ–≥—Ä–∞—Ñ–∏—é –Ω–∞ {}".format(text),
	# 					colour=discord.Color.red()
	# 					)
	# 				)

def setup(client):
	client.add_cog(Econom(client))