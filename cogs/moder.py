#imports
from requests import get
from datetime import datetime
from discord.ext import commands, tasks
from discord.ext.commands import has_permissions, CheckFailure
from urllib.parse import urlparse
from discord import utils
import pip
import os
import discord
import datetime
import socket
import json
import requests
import random
import asyncio
import re
import io
import time
client = commands.Bot(command_prefix = "!")
client.remove_command('help')
answer5 = ['–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–≥–Ω–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–∞–∫–æ–π –∂–µ —Ä–æ–ª—å—é!', '–í–∞—à–∏ —Ä–æ–ª–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã, —è –Ω–µ –º–æ–≥—É —Ç–∞–∫ —Å–¥–µ–ª–∞—Ç—å!', '–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–≥–Ω–∞—Ç—å —Ç–∞–∫–æ–≥–æ –∂–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∫–∞–∫ –∏ –≤—ã!']
answer4 = ['–≠—Ç–æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å, —Ç–∞–∫ –∫–∞–∫ –≤—ã–≥–Ω–∞—Ç—å –º–µ–Ω—è –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å —Å–µ—Ä–≤–µ—Ä–∞!', '–≠—Ç–æ –º–æ–∂–µ—Ç —Å–¥–µ–ª–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å —Å–µ—Ä–≤–µ—Ä–∞', '–¢–∞–∫ —Å–¥–µ–ª–∞—Ç—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ!', '–£–≤—ã, –º–µ–Ω—è –Ω–µ–ª—å–∑—è —Ç–∞–∫ –æ—Å—Ç—Ä–∞–Ω–∏—Ç—å...']
answer3 = ['–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø—Ä–∞–≤!', '–ï–≥–æ —Ä–æ–ª—å —Å—Ç–æ–∏—Ç –≤—ã—à–µ –≤–∞—à–µ–π!', '–≠—Ç–æ –Ω–µ–ª—å–∑—è —Å–¥–µ–ª–∞—Ç—å!', '–í–∞—à–∞ —Ä–æ–ª—å –º–µ–Ω–µ–µ –∑–Ω–∞—á–∏–º–∞, —á–µ–º —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!']
answer2 = ['–¢—ã –±—ã–∫–∞–Ω—É–ª –Ω–∞ –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—è —Å–µ—Ä–≤–µ—Ä–∞, –∏–ª–∏ –º–Ω–µ –ø–æ–∫–∞–∑–∞–ª–æ—Å—å?', '–ß—Ç–æ –æ–Ω —Ç–∞–∫–æ–≥–æ –ø–ª–æ—Ö–æ–≥–æ —Ç–µ–±–µ —Å–¥–µ–ª–∞–ª?', '–ü—Ä–∏ –≤—Å—ë–º —É–≤–∞–∂–µ–Ω–∏–∏ –∫ —Ç–µ–±–µ —è —Ç–∞–∫ –Ω–µ –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å!', '–ê—Ö –µ—Å–ª–∏ –±—ã —è —Ç–∞–∫ –º–æ–≥...', '–Ø –Ω–µ –±—É–¥—É —ç—Ç–æ–≥–æ –¥–µ–ª–∞—Ç—å!', '–°–æ—Ä—è–Ω, –Ω–æ –Ω–µ –≤ –º–æ–∏—Ö —ç—Ç–æ —Å–∏–ª–∞—Ö!']
answer = ['–°–∞–º–æ—É–±–∏–π—Å—Ç–≤–æ –Ω–µ –ø—Ä–∏–≤–µ–¥—ë—Ç –Ω–∏ –∫ —á–µ–º—É —Ö–æ—Ä–æ—à–µ–º—É!', '–ù–∞–ø–æ–º–Ω—é: —Å—É–∏—Ü–∏–¥ - –Ω–µ –≤—ã—Ö–æ–¥!', '–£–≤—ã, —è –Ω–µ –º–æ–≥—É —ç—Ç–æ–≥–æ —Å–¥–µ–ª–∞—Ç—å!', '–°–∞–º–æ—É–±–∏–π—Å—Ç–≤–æ - –Ω–µ –≤—ã—Ö–æ–¥!', '–ù–µ –Ω–∞–¥–æ –∫ —Å–µ–±–µ —Ç–∞–∫ –æ—Ç–Ω–æ—Å–∏—Ç—å—Å—è!', '–Ø –Ω–µ —Å–¥–µ–ª–∞—é —ç—Ç–æ–≥–æ!', '–Ø –Ω–µ –±—É–¥—É —ç—Ç–æ –¥–µ–ª–∞—Ç—å!', '–Ø –Ω–µ –≤—ã–ø–æ–ª–Ω—é —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ', '–ù–µ –∑–∞—Å—Ç–∞–≤–ª—è–π –º–µ–Ω—è —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å!']
class Moderator(commands.Cog):
	"""docstring for User"""
	def __init__(self, client):
		self.client = client
		
	@commands.Cog.listener()
	async def on_ready(self):
		print("Moderator cog connect")
	@commands.command(
		name='–≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ',
		aliases=['Poll', 'POLL', 'poll'],
		brief='–°–æ–∑–¥–∞—Å—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ',
		usage='poll <tema>')
	@commands.has_permissions( manage_messages = True )
	async def _poll(self, ctx, *, tema=None):
		
		
		if tema is None:
			await ctx.send("–£–∫–∞–∂–∏—Ç–µ —Ç–µ–º—É –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è!", delete_after=10)
		else:
			emb=discord.Embed(title='üì¢ –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ:', 
				description=f'{tema}', 
				colour=0x00FFFF, 
				timestamp=ctx.message.created_at)
			
			msg=await ctx.send(embed=emb)
			await msg.add_reaction('üëç')
			await msg.add_reaction('üëé')
	@commands.command(
		name='–æ—á–∏—Å—Ç–∫–∞',
		aliases=['clear', 'clean'],
		brief='–£–¥–∞–ª–∏—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ–µ –∫–æ–ª-–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π',
		usage='clear <amount>'
		)
	@commands.has_permissions(manage_messages=True)
	async def clean(self, ctx, amount : int):
		
		if amount is None:
			await ctx.send(embed=discord.Embed(
				description="–£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ —É–¥–∞–ª—è–µ–º—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π!", 
				colour=discord.Color.red()),
				delete_after=10)
		else:
			
			deleted = await ctx.channel.purge( limit = amount )
			emb = discord.Embed(description=f'–û—á–∏—â–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {len(deleted)}',colour=discord.Color.green())
			await ctx.send( embed = emb, delete_after = 30 )
	@commands.command(
		name='–∏–¥–µ—è',
		aliases=['idea'],
		brief='–ö–∏–Ω–µ—Ç –∏–¥–µ—é —Å–æ–∑–¥–∞—Ç–µ–ª—é',
		usage='idea <idea>')
	async def _idea(self, ctx, *, idea=None):
		
		if idea is None:
			embed = discord.Embed(title="–û—à–∏–±–∫–∞", description="–£–∫–∞–∂–∏—Ç–µ –∏–¥–µ—é {}idea <idea>".format(ctx.command), color=discord.Color.red())
			await ctx.send(embed=embed)
		else:
			member = await self.client.fetch_user(user_id=618488298804871218)#–∞–π–¥–∏
			embed = discord.Embed(title="–ù–æ–≤–∞—è –ò–¥–µ—è!", description=f"**–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:\n**{ctx.author}\n**–ê–π–¥–∏:**\n{ctx.author.id}\n**–ò–¥–µ—è:**\n{idea}", color=discord.Color.green())
			embed2 = discord.Embed(title="–£—Å–ø–µ—à–Ω–æ!", description=f"–ò–¥–µ—è –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å–æ–∑–¥–∞—Ç–∞–µ–ª—é\n**–°–æ–¥–µ—Ä–∂–∏–º–æ–µ:**\n{idea}", color=discord.Color.green())
			await member.send(embed=embed)
			await ctx.send(embed=embed2)
	@commands.command(
		name='–±–∞–≥',
		aliases=['bugs'],
		brief='–ö–∏–Ω–µ—Ç –±–∞–≥ —Å–æ–∑–¥–∞—Ç–µ–ª—é',
		usage='bugs <bug>'
		)
	async def bug(self, ctx, *, idea=None):
		await ctx.message.delete()
		if idea is None:
			embed = discord.Embed(title="–û—à–∏–±–∫–∞", description="–£–∫–∞–∂–∏—Ç–µ –∏–¥–µ—é {}idea <idea>".format(ctx.command), color=discord.Color.red())
			await ctx.send(embed=embed)
		else:
			member = await self.client.fetch_user(user_id=618488298804871218)#–∞–π–¥–∏
			embed = discord.Embed(title="–ù–æ–≤—ã–π –±–∞–≥!", description=f"**–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:\n**{ctx.author}\n**–ê–π–¥–∏:**\n{ctx.author.id}\n**–ò–¥–µ—è:**\n{idea}", color=discord.Color.green())
			embed2 = discord.Embed(title="–£—Å–ø–µ—à–Ω–æ!", description=f"–ë–∞–≥ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Å–æ–∑–¥–∞—Ç–∞–µ–ª—é\n**–°–æ–¥–µ—Ä–∂–∏–º–æ–µ:**\n{idea}", color=discord.Color.green())
			await member.send(embed=embed)
			await ctx.send(embed=embed2)

	# @commands.command()
	# @commands.has_permissions(manage_messages=True)
	# async def say(self, ctx, channel: discord.TextChannel = None):
	# 	if channel is None:
	# 		await ctx.send("–£–∫–∞–∂–∏—Ç–µ –∫–∞–Ω–∞–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–µ")
	# 	else:
	# 		emb=discord.Embed(
	# 			title="–í—ã–±–∏—Ä–µ—Ç–µ –≤–∏–¥ say",
	# 			colour=discord.Color.gold()
	# 			)
	# 		emb.add_field(
	# 			name="1. - 1Ô∏è‚É£",
	# 			value='[–ó–∞–≥–æ–ª–æ–≤–æ–∫] | [–û–ø–∏—Å–∞–Ω–∏–µ] (–∫–∞—Ä—Ç–∏–Ω–∫–∞)',
	# 			inline=False
	# 			)
	# 		emb.add_field(
	# 			name="2. - 2Ô∏è‚É£",
	# 			value='[–ó–∞–≥–æ–ª–æ–≤–æ–∫] | (–∫–∞—Ä—Ç–∏–Ω–∫–∞)',
	# 			inline=False
	# 			)
	# 		emb.add_field(
	# 			name="3. - 3Ô∏è‚É£",
	# 			value='[–û–ø–∏—Å–∞–Ω–∏–µ] | (–∫–∞—Ä—Ç–∏–Ω–∫–∞)',
	# 			inline=False
	# 			)
	# 		emb.add_field(
	# 			name="4. - 4Ô∏è‚É£",
	# 			value='[–ó–∞–≥–æ–ª–æ–≤–æ–∫] | [–û–ø–∏—Å–∞–Ω–∏–µ]',
	# 			inline=False
	# 			)
	# 		msg = await ctx.send(embed=emb)
	# 		await msg.add_reaction('1Ô∏è‚É£')
	# 		await msg.add_reaction('2Ô∏è‚É£')
	# 		await msg.add_reaction('3Ô∏è‚É£')
	# 		await msg.add_reaction('4Ô∏è‚É£')
	# 		def check(reaction, user):
	# 			return user == ctx.author
	# 		reaction, user = await self.client.wait_for('reaction_add', timeout=60.0, check = check)
	# 		if str(reaction.emoji) == '1Ô∏è‚É£':
	# 			await ctx.send("–¢–µ–ø–µ—Ä—å –∫–∏–Ω—å—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫")
	# 			def check(m):
	# 				return m.author.id == ctx.author.id
	# 			try:
	# 				h = await self.client.wait_for('message',timeout=30.0, check=check)
	# 			except asyncio.TimeoutError:
	# 				await ctx.send('–í—ã –Ω–µ –∫–∏–Ω—É–ª–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫!', delete_after=10)
	# 			else:

	# 				await ctx.send("–¢–µ–ø–µ—Ä—å –∫–∏–Ω—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ")
	# 				def check(m):
	# 					return m.author.id == ctx.author.id
	# 				try:
	# 					r = await self.client.wait_for('message',timeout=30.0, check=check)
	# 				except asyncio.TimeoutError:
	# 					await ctx.send('–í—ã –Ω–µ –∫–∏–Ω—É–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ!', delete_after=10)
	# 				else: 
	# 					await ctx.send("–¢–µ–ø–µ—Ä—å –∫–∏–Ω—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É")
	# 					def check(m):
	# 						return m.author.id == ctx.author.id
	# 					try:
	# 						a = await self.client.wait_for('message',timeout=30.0, check=check)
	# 					except asyncio.TimeoutError:
	# 						await ctx.send('–í—ã –Ω–µ –∫–∏–Ω—É–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É!', delete_after=10)
	# 					else:
	# 						emb = discord.Embed(title=h.content,
	# 							description=r.content,
	# 							colour=discord.Color.orange())
	# 						emb.set_image(url=a.content)
	# 						await channel.send(embed=emb)
	# 		if str(reaction.emoji) == '2Ô∏è‚É£':	
	# 			await ctx.send("–¢–µ–ø–µ—Ä—å –∫–∏–Ω—å—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫")
	# 			def check(m):
	# 				return m.author.id == ctx.author.id
	# 			try:
	# 				h = await self.client.wait_for('message',timeout=30.0, check=check)
	# 			except asyncio.TimeoutError:
	# 				await ctx.send('–í—ã –Ω–µ –∫–∏–Ω—É–ª–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫!', delete_after=10)
	# 			else:
	# 				emb = discord.Embed(title=h.content,
	# 					colour=discord.Color.orange())
	# 				await ctx.send("–¢–µ–ø–µ—Ä—å –∫–∏–Ω—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É")
	# 				def check(m):
	# 					return m.author.id == ctx.author.id
	# 				try:
	# 					a = await self.client.wait_for('message',timeout=30.0, check=check)
	# 				except asyncio.TimeoutError:
	# 					await ctx.send('–í—ã –Ω–µ –∫–∏–Ω—É–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É!', delete_after=10)
	# 				else:
	# 					emb.set_image(url=a.content)
	# 					await channel.send(embed=emb)
	# 		if str(reaction.emoji) == '3Ô∏è‚É£':
	# 			await ctx.send("–¢–µ–ø–µ—Ä—å –∫–∏–Ω—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ")
	# 			def check(m):
	# 				return m.author.id == ctx.author.id
	# 			try:
	# 				h = await self.client.wait_for('message',timeout=30.0, check=check)
	# 			except asyncio.TimeoutError:
	# 				await ctx.send('–í—ã –Ω–µ –∫–∏–Ω—É–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ!', delete_after=10)
	# 			else:
	# 				emb = discord.Embed(description= h.content,
	# 					colour=discord.Color.orange())
	# 				await ctx.send("–¢–µ–ø–µ—Ä—å –∫–∏–Ω—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É")
	# 				def check(m):
	# 					return m.author.id == ctx.author.id
	# 				try:
	# 					a = await self.client.wait_for('message',timeout=30.0, check=check)
	# 				except asyncio.TimeoutError:
	# 					await ctx.send('–í—ã –Ω–µ –∫–∏–Ω—É–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É!', delete_after=10)
	# 				else:
	# 					emb.set_image(url=a.content)
	# 					await channel.send(embed=emb)
	# 		if str(reaction.emoji) == '4Ô∏è‚É£':
	# 			await ctx.send("–¢–µ–ø–µ—Ä—å –∫–∏–Ω—å—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫")
	# 			def check(m):
	# 				return m.author.id == ctx.author.id
	# 			try:
	# 				h = await self.client.wait_for('message',timeout=30.0, check=check)
	# 			except asyncio.TimeoutError:
	# 				await ctx.send('–í—ã –Ω–µ –∫–∏–Ω—É–ª–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫!', delete_after=10)
	# 			else:

	# 				await ctx.send("–¢–µ–ø–µ—Ä—å –∫–∏–Ω—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ")
	# 				def check(m):
	# 					return m.author.id == ctx.author.id
	# 				try:
	# 					a = await self.client.wait_for('message',timeout=30.0, check=check)
	# 				except asyncio.TimeoutError:
	# 					await ctx.send('–í—ã –Ω–µ –∫–∏–Ω—É–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ!', delete_after=10)
	# 				else:
	# 					emb = discord.Embed(title=h.content, 
	# 						description = a.content,
	# 						colour=discord.Color.orange())
	# 					await channel.send(embed=emb)
	@commands.command(
		name='–∫–∏–∫',
		aliases=["kick"],
		usage = "kick <@user>",
		brief = "–ö–∏–∫–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
	@commands.has_permissions( kick_members = True )
	@commands.cooldown(1, per = 10, type = discord.ext.commands.BucketType.guild )
	async def kicks(self, ctx, member : discord.Member, *, reason=None):
		
 
		if ctx.author.top_role == member.top_role:
			emb = discord.Embed(colour=discord.Color.red())
			emb.add_field(name=':leg: –ö–∏–∫:', value = random.choice(answer5))
			await ctx.send(embed=emb, delete_after=30)
 
			return
 
 
		elif member == ctx.bot.user:
			emb = discord.Embed(colour=discord.Color.red())
			emb.add_field(name=':leg: –ö–∏–∫:', value = random.choice(answer4))
			await ctx.send(embed=emb, delete_after=30)
 
			return
 
		elif ctx.author.top_role < member.top_role:
			emb = discord.Embed(colour=discord.Color.red())
			emb.add_field(name=':leg: –ö–∏–∫:', value = random.choice(answer3))
			await ctx.send(embed=emb, delete_after=30)
 
			return
 
		elif member == ctx.author:
			emb = discord.Embed(colour=discord.Color.red())
			emb.add_field(name=':leg: –ö–∏–∫:', value = random.choice(answer))
			await ctx.send(embed=emb, delete_after=30)
 
			return
 
		elif member == ctx.guild.owner:
			emb = discord.Embed(colour=discord.Color.red())
			emb.add_field(name=':leg: –ö–∏–∫:', value = random.choice(answer2))
			await ctx.send(embed=emb, delete_after=30)
 
			return
 
		emb = discord.Embed(color=discord.Color.red())
		emb.add_field(name=':leg: –ö–∏–∫:', value = f'–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∫–∏–∫–Ω—É—Ç—å `{member.name}`?')
		emb.set_footer(text='–ï—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞ –Ω–∞–∂–º–∏ –Ω–∞ –∫—Ä–µ—Å—Ç–∏–∫')
		msg = await ctx.send(embed=emb, delete_after = 30)
		await msg.add_reaction('‚úÖ')
		await msg.add_reaction('‚ùå')
		def check(reaction, user):
			return user == ctx.author 
		
		reaction, user = await self.client.wait_for('reaction_add', timeout=30.0, check = check)
		if str(reaction.emoji) == '‚ùå':
			await ctx.send(embed=discord.Embed(title="–û—Ç–º–µ–Ω–µ–Ω–æ‚úÖ", colour=discord.Color.red()))
		elif str(reaction.emoji) == '‚úÖ':
			if reason == None:
				try:
					await member.kick(reason=reason)
				except:
					success = False
				else:
					success = True
 
				emb = discord.Embed( colour = discord.Color.red(), timestamp = ctx.message.created_at)
				emb.add_field( name = ':leg: –ö–∏–∫:', value = f'`{member.name}` –∫–∏–∫–Ω—É—Ç!', inline = False)
				emb.add_field( name = '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:', value = f'{ctx.author}')
 
				await ctx.send(embed=emb)
 
				return
			try:
				await member.kick(reason=reason)
			except:
				success = False
			else:
				success = True
 
			emb = discord.Embed( colour = discord.Color.red(), timestamp = ctx.message.created_at)
			emb.add_field( name = ':leg: –ö–∏–∫:', value = f'`{member.name}` –∫–∏–∫–Ω—É—Ç!', inline = False)
			emb.add_field( name = '–ü–æ –ø—Ä–∏—á–∏–Ω–µ:', value = reason, inline = False)
			emb.add_field( name = '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:', value = f'{ctx.author}')
 
			await ctx.send(embed=emb)
	@commands.command(
		name='–±–∞–Ω',
		aliases=["ban"],
		usage = "ban <@user>",
		brief="–ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
		)
	@commands.has_permissions( ban_members = True )
	@commands.cooldown(1, per = 10, type = discord.ext.commands.BucketType.guild )
	async def ban(self, ctx, member : discord.Member, *, reason=None):
		
		if ctx.author.top_role == member.top_role:
			emb = discord.Embed(colour=discord.Color.red())
			emb.add_field(name=':leg: –ö–∏–∫:', value = random.choice(answer5))
			await ctx.send(embed=emb, delete_after=30)
 
			return
 
 
		elif member == ctx.bot.user:
			emb = discord.Embed(colour=discord.Color.red())
			emb.add_field(name=':hammer: –ë–∞–Ω:', value = random.choice(answer4))
			await ctx.send(embed=emb, delete_after=30)
 
			return
 
		elif ctx.author.top_role < member.top_role:
			emb = discord.Embed(colour=discord.Color.red())
			emb.add_field(name=':hammer: –ë–∞–Ω:', value = random.choice(answer3))
			await ctx.send(embed=emb, delete_after=30)
 
			return
 
		elif member == ctx.author:
			emb = discord.Embed(colour=discord.Color.red())
			emb.add_field(name=':hammer: –ë–∞–Ω:', value = random.choice(answer))
			await ctx.send(embed=emb, delete_after=30)
 
			return
 
		elif member == ctx.guild.owner:
			emb = discord.Embed(colour=discord.Color.red())
			emb.add_field(name=':hammer: –ë–∞–Ω:', value = random.choice(answer2))
			await ctx.send(embed=emb, delete_after=30)
 
			return
		emb = discord.Embed(colour=discord.Color.red())
		emb.add_field(name=':hammer: –ë–∞–Ω:', value = f'–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å `{member.name}`?')
		emb.set_footer(text='–ù–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –∫—Ä–µ—Å—Ç–∏–∫, –µ—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞!')
		msg = await ctx.send(embed=emb, delete_after = 30)
		await msg.add_reaction('‚úÖ')
		await msg.add_reaction('‚ùå')
		def check(reaction, user):
			return user == ctx.author 
		
		reaction, user = await self.client.wait_for('reaction_add', timeout=30.0, check = check)
		if str(reaction.emoji) == '‚ùå':
			await ctx.send(embed=discord.Embed(title="–û—Ç–º–µ–Ω–µ–Ω–æ‚úÖ", colour=discord.Color.red()))
		elif str(reaction.emoji) == '‚úÖ':
 
			if reason == None:
 
				try:
 
					await member.ban(reason=None)
				except:
					success = False
				else:
					success = True
 
				emb = discord.Embed( colour = discord.Color.red(), timestamp = ctx.message.created_at)
				emb.add_field( name = ':hammer: –ë–∞–Ω:', value = f'–£—á–∞—Å—Ç–Ω–∏–∫ `{member.name}` –∑–∞–±–∞–Ω–Ω–µ–Ω!', inline = False)
				emb.add_field( name = '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:', value = f'{ctx.author}')
 
 
				await ctx.send(embed=emb)
 
				return
 
			try:
 
				await member.ban(reason=reason)
			except:
				success = False
			else:
				success = True
 
			emb = discord.Embed( colour = discord.Color.red(), timestamp = ctx.message.created_at)
			emb.add_field( name = ':hammer: –ë–∞–Ω:', value = f'–£—á–∞—Å—Ç–Ω–∏–∫ `{member.name}` –∑–∞–±–∞–Ω–Ω–µ–Ω!', inline = False)
			emb.add_field( name = '–ü–æ –ø—Ä–∏—á–∏–Ω–µ:', value = reason, inline = False)
			emb.add_field( name = '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:', value = f'{ctx.author}')
 
 
			await ctx.send(embed=emb)

	@commands.command(
		name='–º—É—Ç',
		aliases=["mute"],
		usage="mute <@user>",
		brief="–ó–∞–º—å—é—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
	@commands.has_permissions( kick_members = True )
	@commands.cooldown(1, per = 10, type = discord.ext.commands.BucketType.guild )
	async def muted(self, ctx, member:discord.Member, duration=None, *, reason=None):
		
		if ctx.author.top_role == member.top_role:
			emb = discord.Embed(colour=discord.Color.red())
			emb.add_field(name=':shushing_face: –ú—É—Ç:', value = random.choice(answer5))
			await ctx.send(embed=emb, delete_after=30)
 
			return
 
 
		elif member == ctx.bot.user:
			emb = discord.Embed(colour=discord.Color.red())
			emb.add_field(name=':shushing_face: –ú—É—Ç:', value = random.choice(answer4))
			await ctx.send(embed=emb, delete_after=30)
 
			return
 
		elif ctx.author.top_role < member.top_role:
			emb = discord.Embed(colour=discord.Color.red())
			emb.add_field(name=':shushing_face: –ú—É—Ç:', value = random.choice(answer3))
			await ctx.send(embed=emb, delete_after=30)
 
			return
 
		elif member == ctx.author:
			emb = discord.Embed(colour=discord.Color.red())
			emb.add_field(name=':shushing_face: –ú—É—Ç:', value = random.choice(answer))
			await ctx.send(embed=emb, delete_after=30)
 
			return
 
		elif member == ctx.guild.owner:
			emb = discord.Embed(colour=discord.Color.red())
			emb.add_field(name=':shushing_face: –ú—É—Ç:', value = random.choice(answer2))
			await ctx.send(embed=emb, delete_after=30)
 
			return
		emb = discord.Embed(colour=discord.Color.red())		
		emb.add_field(name=':shushing_face: –ú—É—Ç', value="–ü–æ—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ!")
		emb.set_footer(text="–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫—Ä–µ—Å—Ç–∏–∫, –µ—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞!")
		msg = await ctx.send(embed=emb, delete_after = 30)
		await msg.add_reaction('‚úÖ')
		await msg.add_reaction('‚ùå')
		def check(reaction, user):
			return user == ctx.author 
		
		reaction, user = await self.client.wait_for('reaction_add', timeout=30.0, check = check)
		if str(reaction.emoji) == '‚ùå':
			await ctx.send(embed=discord.Embed(title="–û—Ç–º–µ–Ω–µ–Ω–æ‚úÖ", colour=discord.Color.red()))
		elif str(reaction.emoji) == '‚úÖ':
 
			if duration == None:
				if reason == None:
					try:
						progress = await ctx.send('–ú—å—é—á—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!', delete_after = 5)
 
						emb = discord.Embed( colour = discord.Color.red(), timestamp = ctx.message.created_at)
						emb.add_field( name = ':shushing_face: –ú—É—Ç:', value = f'–£—á–∞—Å—Ç–Ω–∏–∫ `{member.name}` –∑–∞–º—É—á–µ–Ω!\n–û–Ω –Ω–µ –≤—ã–π–¥–µ—Ç –∏–∑ –º—É—Ç–∞, –ø–æ–∫–∞ –µ–≥–æ –Ω–µ —Ä–∞–∑–º—É—Ç—è—Ç!', inline = False)
						emb.add_field( name = '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:', value = f'{ctx.author}')
 
						await ctx.send( embed = emb)
   
 
						for channel in ctx.guild.text_channels:
							await channel.set_permissions(member, overwrite=discord.PermissionOverwrite(send_messages = False), reason=reason)
	
						for channel in ctx.guild.voice_channels:
							await channel.set_permissions(member, overwrite=discord.PermissionOverwrite(speak=False), reason=reason)
					except:
						success = False
					else:
						success = True
 
					emb = discord.Embed( colour = discord.Color.red(), timestamp = ctx.message.created_at)
					emb.add_field( name = ':shushing_face: –ú—É—Ç:', value = f'–í—ã, `{member.name}` –∑–∞–º—É—á–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ `{ ctx.guild.name }`!\n–í—ã –Ω–µ –≤—ã–π–¥–µ—Ç–µ –∏–∑ –º—É—Ç–∞, –ø–æ–∫–∞ –≤–∞—Å –Ω–µ —Ä–∞–∑–º—É—Ç—è—Ç!', inline = False)
					emb.add_field( name = '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:', value = f'{ctx.author}')
 
					await member.send( embed = emb)
 
 
					return
 
 
				try:
					progress = await ctx.send('–ú—å—é—á—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!', delete_after = 5)
 
					emb = discord.Embed( colour = discord.Color.red(), timestamp = ctx.message.created_at)
					emb.add_field( name = ':shushing_face: –ú—É—Ç:', value = f'–£—á–∞—Å—Ç–Ω–∏–∫ `{member.name}` –∑–∞–º—É—á–µ–Ω!\n–û–Ω –Ω–µ –≤—ã–π–¥–µ—Ç –∏–∑ –º—É—Ç–∞, –ø–æ–∫–∞ –µ–≥–æ –Ω–µ —Ä–∞–∑–º—É—Ç—è—Ç!', inline = False)
					emb.add_field( name = '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:', value = f'{ctx.author}')
 
					await ctx.send( embed = emb)
  
 
					for channel in ctx.guild.text_channels:
						await channel.set_permissions(member, overwrite=discord.PermissionOverwrite(send_messages = False), reason=reason)
   
					for channel in ctx.guild.voice_channels:
						await channel.set_permissions(member, overwrite=discord.PermissionOverwrite(speak=False), reason=reason)
				except:
					success = False
				else:
					success = True
 
				emb = discord.Embed( colour = discord.Color.red(), timestamp = ctx.message.created_at)
				emb.add_field( name = ':shushing_face: –ú—É—Ç:', value = f'–í—ã, `{member.name}` –∑–∞–º—É—á–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ `{ ctx.guild.name }`!\n–í—ã –Ω–µ –≤—ã–π–¥–µ—Ç–µ –∏–∑ –º—É—Ç–∞, –ø–æ–∫–∞ –≤–∞—Å –Ω–µ —Ä–∞–∑–º—É—Ç—è—Ç!', inline = False)
				emb.add_field( name = '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:', value = f'{ctx.author}')
 
				await member.send( embed = emb)
 
				return
 
 
			unit = duration[-1]
			if unit == '—Å':
				time = int(duration[:-1])
				longunit = '—Å–µ–∫—É–Ω–¥'
			elif unit == 's':
				time = int(duration[:-1])
				longunit = '—Å–µ–∫—É–Ω–¥'
			elif unit == '–º':
				time = int(duration[:-1]) * 60
				longunit = '–º–∏–Ω—É—Ç—É/–º–∏–Ω—É—Ç'
			elif unit == 'm':
				time = int(duration[:-1]) * 60
				longunit = '–º–∏–Ω—É—Ç—É/–º–∏–Ω—É—Ç'
			elif unit == '—á':
				time = int(duration[:-1]) * 60 * 60
				longunit = '—á–∞—Å/—á–∞—Å–æ–≤'
			elif unit == 'h':
				time = int(duration[:-1]) * 60 * 60
				longunit = '—á–∞—Å/—á–∞—Å–æ–≤'
			elif unit == '–¥':
				time = int(duration[:-1]) * 60 * 60 *24
				longunit = '–¥–µ–Ω—å/–¥–Ω–µ–π'
			elif unit == 'd':
				time = int(duration[:-1]) * 60 * 60 *24
				longunit = '–¥–µ–Ω—å/–¥–Ω–µ–π'
			else:
				await ctx.send('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏!', delete_after = 30)
				return
 
			if reason == None:
				try:
					progress = await ctx.send('–ú—å—é—á—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!', delete_after = 5)
 
					emb = discord.Embed( colour = discord.Color.red(), timestamp = ctx.message.created_at)
					emb.add_field( name = ':shushing_face: –ú—É—Ç:', value = f'–£—á–∞—Å—Ç–Ω–∏–∫ `{member.name}` –∑–∞–º—É—á–µ–Ω!\n–û–Ω –≤—ã–π–¥–µ—Ç –∏–∑ –º—É—Ç–∞ —á–µ—Ä–µ–∑: {str(duration[:-1])} {longunit}', inline = False)
					emb.add_field( name = '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:', value = f'{ctx.author}')
 
					await ctx.send( embed = emb)
 
  
					for channel in ctx.guild.text_channels:
						await channel.set_permissions(member, overwrite=discord.PermissionOverwrite(send_messages = False), reason=reason)
 
					for channel in ctx.guild.voice_channels:
						await channel.set_permissions(member, overwrite=discord.PermissionOverwrite(speak=False), reason=reason)
				except:
					success = False
				else:
					success = True
 
				emb = discord.Embed( colour = discord.Color.red(), timestamp = ctx.message.created_at)
				emb.add_field( name = ':shushing_face: –ú—É—Ç:', value = f'–í—ã, `{member.name}` –∑–∞–º—É—á–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ `{ ctx.guild.name }`!\n–í—ã –≤—ã–π–¥–µ—Ç–µ –∏–∑ –º—É—Ç–∞ —á–µ—Ä–µ–∑: {str(duration[:-1])} {longunit}', inline = False)
				emb.add_field( name = '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:', value = f'{ctx.author}')
 
				await member.send( embed = emb)
	
				await asyncio.sleep(time)
				try:
					for channel in ctx.guild.channels:
						await channel.set_permissions(member, overwrite=None, reason=reason)
				except:
					pass
 
				return
  
			try:
				progress = await ctx.send('–ú—å—é—á—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!', delete_after = 5)
 
				emb = discord.Embed( colour = discord.Color.red(), timestamp = ctx.message.created_at)
				emb.add_field( name = ':shushing_face: –ú—É—Ç:', value = f'–£—á–∞—Å—Ç–Ω–∏–∫ `{member.name}` –∑–∞–º—É—á–µ–Ω!\n–û–Ω –≤—ã–π–¥–µ—Ç –∏–∑ –º—É—Ç–∞ —á–µ—Ä–µ–∑: {str(duration[:-1])} {longunit}', inline = False)
				emb.add_field( name = '–ü–æ –ø—Ä–∏—á–∏–Ω–µ:', value = reason, inline = False)
				emb.add_field( name = '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:', value = f'{ctx.author}')
 
				await ctx.send( embed = emb)
 
 
				for channel in ctx.guild.text_channels:
					await channel.set_permissions(member, overwrite=discord.PermissionOverwrite(send_messages = False), reason=reason)
 
				for channel in ctx.guild.voice_channels:
					await channel.set_permissions(member, overwrite=discord.PermissionOverwrite(speak=False), reason=reason)
			except:
				success = False
			else:
				success = True
 
			emb = discord.Embed( colour = discord.Color.red(), timestamp = ctx.message.created_at)
			emb.add_field( name = ':shushing_face: –ú—É—Ç:', value = f'–í—ã, `{member.name}` –∑–∞–º—É—á–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ `{ ctx.guild.name }`!\n–í—ã –≤—ã–π–¥–µ—Ç–µ –∏–∑ –º—É—Ç–∞ —á–µ—Ä–µ–∑: {str(duration[:-1])} {longunit}', inline = False)
			emb.add_field( name = '–ü–æ –ø—Ä–∏—á–∏–Ω–µ:', value = reason, inline = False)
			emb.add_field( name = '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:', value = f'{ctx.author}')
  
			await member.send( embed = emb)
	
			await asyncio.sleep(time)
			try:
				for channel in ctx.guild.channels:
					await channel.set_permissions(member, overwrite=None, reason=reason)
			except:
				pass
	@commands.command(
		name='—Ä–∞–∑–º—É—Ç', 
		aliases=["unmute"],
		brief="–†–∞–∑–º—å—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", 
		usage="unmute <@muteduser>")
	@commands.cooldown(1, per = 10, type = discord.ext.commands.BucketType.guild )
	@commands.has_permissions( kick_members = True )
	async def unmuted(self, ctx, member:discord.Member, *, reason=None):
		
 
		if ctx.author.top_role == member.top_role:
			emb = discord.Embed(colour=discord.Color.red())
			emb.add_field(name=':smiley: –†–∞–∑–º—É—Ç:', value = random.choice(answer5))
			await ctx.send(embed=emb, delete_after=30)
 
			return
		elif member == ctx.bot.user:
			emb = discord.Embed(colour=discord.Color.red())
			emb.add_field(name=':smiley: –†–∞–∑–º—É—Ç:', value = random.choice(answer4))
			await ctx.send(embed=emb, delete_after=30)
 
			return
 
		elif ctx.author.top_role < member.top_role:
			emb = discord.Embed(colour=discord.Color.red())
			emb.add_field(name=':smiley: –†–∞–∑–º—É—Ç:', value = random.choice(answer3))
			await ctx.send(embed=emb, delete_after=30)
 
			return
 
		elif member == ctx.author:
			emb = discord.Embed(colour=discord.Color.red())
			emb.add_field(name=':smiley: –†–∞–∑–º—É—Ç:', value = random.choice(answer))
			await ctx.send(embed=emb, delete_after=30)
 
			return
 
		elif member == ctx.guild.owner:
			emb = discord.Embed(colour=discord.Color.red())
			emb.add_field(name=':smiley: –†–∞–∑–º—É—Ç:', value = random.choice(answer2))
			await ctx.send(embed=emb, delete_after=30)
 
			return
		emb = discord.Embed(description="–ü–æ—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ!", colour=discord.Color.red())
		msg = await ctx.send(embed=emb, delete_after = 30)
		await msg.add_reaction('‚úÖ')
		def check(reaction, user):
			return user == ctx.author 
		
		reaction, user = await self.client.wait_for('reaction_add', timeout=30.0, check = check)
		if str(reaction.emoji) == '‚ùå':
			await ctx.send(embed=discord.Embed(title="–û—Ç–º–µ–Ω–µ–Ω–æ‚úÖ", colour=discord.Color.red()))
		elif str(reaction.emoji) == '‚úÖ':
			await ctx.send('–†–∞–∑–º—É—á–∏–≤–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', delete_after = 5)
			try:
				for channel in ctx.message.guild.channels:
					await channel.set_permissions(member, overwrite=None, reason=reason)
			except:
				success = False
			else:
				success = True
 
			if reason == None:
				emb = discord.Embed( colour = discord.Color.green(), timestamp = ctx.message.created_at)
				emb.add_field( name = ':smiley: –†–∞–∑–º—É—Ç:', value = f'–í—ã, `{member.name}` —Ä–∞–∑–º—É—á–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ `{ ctx.guild.name }`!', inline = False)
				emb.add_field( name = '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:', value = f'{ctx.author}')
 
				await member.send( embed = emb)
			
				emb = discord.Embed( colour = discord.Color.green(), timestamp = ctx.message.created_at)
				emb.add_field( name = ':smiley: –†–∞–∑–º—É—Ç:', value = f'–£—á–∞—Å—Ç–Ω–∏–∫ `{member.name}` —Ä–∞–∑–º—É—á–µ–Ω!', inline = False)
				emb.add_field( name = '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:', value = f'{ctx.author}')
				await ctx.send( embed = emb)
 
				return
 
			emb = discord.Embed( colour = discord.Color.green(), timestamp = ctx.message.created_at)
			emb.add_field( name = ':smiley: –†–∞–∑–º—É—Ç:', value = f'–í—ã, `{member.name}` —Ä–∞–∑–º—É—á–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ `{ ctx.guild.name }`!', inline = False)
			emb.add_field( name = '–ü–æ –ø—Ä–∏—á–∏–Ω–µ:', value = reason, inline = False)
			emb.add_field( name = '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:', value = f'{ctx.author}')
  
			await member.send( embed = emb)
			
			emb = discord.Embed( colour = discord.Color.green(), timestamp = ctx.message.created_at)
			emb.add_field( name = ':smiley: –†–∞–∑–º—É—Ç:', value = f'–£—á–∞—Å—Ç–Ω–∏–∫ `{member.name}` —Ä–∞–∑–º—É—á–µ–Ω!', inline = False)
			emb.add_field( name = '–ü–æ –ø—Ä–∏—á–∏–Ω–µ:', value = reason, inline = False)
			emb.add_field( name = '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:', value = f'{ctx.author}')
			await ctx.send( embed = emb)

def setup(client):
	client.add_cog(Moderator(client))	