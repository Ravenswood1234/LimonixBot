#imports
from bs4 import BeautifulSoup
from discord.ext import commands, tasks
from itertools import cycle #pip install more-itertools
from discord import Spotify, Embed, Role, Color
from datetime import datetime
from requests import get
import io
import aiohttp
import datetime
import discord #pip install discord.py
import datetime
import json
import random
import requests
import wikipedia
import asyncio
import os
import youtube_dl
"""
wiki '–≤–∏–∫–∏', 'wiki', "wikipedia", "–≤–∏–∫–∏–ø–µ–¥–∏—è"+
userinfo "userinfo", "user", "—é–∑–µ—Ä"+
server "—Å–µ—Ä–≤–µ—Ä", "serverinfo"+
roleinfo "roleinfo", "role", "—Ä–æ–ª—å–∏–Ω—Ñ–æ"+
spotify "spotify", "—Å–ø–æ—Ç–∏—Ñ–∞–π"+
ping +
ava 'ava', 'avatar'+
weather "–ø–æ–≥–æ–¥–∞" +
google +
"""
class Utilite(commands.Cog):
	"""docstring for User"""
	def __init__(self, client):
		self.client = client
	@commands.command(
		name="–ê–≤–∞—Ç–∞—Ä",
		aliases=['ava', 'avatar'],
		brief="–£–≤–µ–ª–∏—á–µ–Ω—ã–π –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
		usage="ava <@user>"
		)
	async def avatar(self, ctx, member:discord.Member = None):
		try:
			if member is None:
				member = ctx.author
			emb = discord.Embed(
				title=f"–£–≤–µ–ª–∏—á–µ–Ω—ã–π –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.name}",
				colour=discord.Color.purple()
				)
			emb.set_image(url=member.avatar_url)
			await ctx.send(embed=emb)
		except:
			await ctx.send(
				embed=discord.Embed(
					title="–ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
					description="–ß—Ç–æ —Ç–æ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å .-.",
					colour=discord.Color.red()
					)
				)
	@avatar.error
	async def avatar_error(self, ctx, error):
		if isinstance(error, commands.UserInputError):
			await ctx.send(
				embed=discord.Embed(
					title="–ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
					description="–í—ã –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–ª–∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!",
					colour=discord.Color.red()
					)
				)
	@commands.command()
	async def ping(self, ctx):
		ping = self.client.latency
		ping_emoji = "üü©üî≥üî≥üî≥üî≥"
		
		ping_list = [
			{"ping": 0.10000000000000000, "emoji": "üüßüü©üî≥üî≥üî≥"},
			{"ping": 0.15000000000000000, "emoji": "üü•üüßüü©üî≥üî≥"},
			{"ping": 0.20000000000000000, "emoji": "üü•üü•üüßüü©üî≥"},
			{"ping": 0.25000000000000000, "emoji": "üü•üü•üü•üüßüü©"},
			{"ping": 0.30000000000000000, "emoji": "üü•üü•üü•üü•üüß"},
			{"ping": 0.35000000000000000, "emoji": "üü•üü•üü•üü•üü•"}]
		
		for ping_one in ping_list:
			if ping > ping_one["ping"]:
				ping_emoji = ping_one["emoji"]
				break

		message = await ctx.send("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ. . .")
		emb = Embed(
			title="–ü–æ–Ω–≥!",
			colour=Color.blue()
		)
		emb.add_field(
			name="–ü–∏–Ω–≥ –±–æ—Ç–∞",
			value=f"{ping * 1000:.0f}mc"
			)
		emb.set_footer(text=f"{ping_emoji}")
		await message.edit(embed=emb)
	@commands.command(
		name="Spotify",
		aliases=["spotify", "—Å–ø–æ—Ç–∏—Ñ–∞–π"],
		usage="spotify <@user>",
		brief="–£–∑–Ω–∞—Ç—å –¥–æ–ø –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º—É–∑—ã–∫–µ –∫–æ—Ç–æ—Ä—É—é —Å–ª—É—à–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
		)
	async def spotify(self, ctx, member: discord.Member = None):
		def strfdelta(tdelta, fmt):
			d = {"days": tdelta.days}
			d["hours"], rem = divmod(tdelta.seconds, 3600)
			d["minutes"], d["seconds"] = divmod(rem, 60)
			return fmt.format(**d)
		member = member or ctx.author

		spot = next((activity for activity in member.activities if isinstance(activity, discord.Spotify)), None)

		if not spot:
			return await ctx.send(f"{member.mention}, –Ω–µ —Å–ª—É—à–∞–µ—Ç Spotify :mute:")
		starttime = spot.created_at
		endttime = spot.end
		start = spot.start
		starts = start.strftime('%H:%M %d.%m.%Y–≥')
		endtime = endttime.strftime('%H:%M %d.%m.%Y–≥')
		sttime = starttime.strftime('%H:%M %d.%m.%Y–≥')
		embed = discord.Embed(title = f"{member} —Å–ª—É—à–∞–µ—Ç Spotify :notes:", color = spot.color)

		embed.add_field(
			name = "–ü–µ—Å–Ω—è", 
			value = spot.title, 
			inline=False)
		embed.add_field(
			name = "–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å", 
			value = spot.artist, 
			inline=False)
		embed.add_field(
			name = "–ê–ª—å–±–æ–º", 
			value = spot.album, 
			inline=False)
		embed.add_field(
			name = "–ü–∞—Ç–∏ –∞–π–¥–∏", 
			value = spot.party_id[8:], 
			inline=False)
		embed.add_field(
			name = "–¢—Ä–µ–∫ –∞–π–¥–∏", 
			value = spot.track_id, 
			inline=False)
		embed.add_field(
			name = "–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞—É–¥–∏–æ", 
			value = strfdelta(spot.duration, '{hours:02}:{minutes:02}:{seconds:02}'), inline=False)
		embed.add_field(
			name="–ù–∞—á–∞–ª —Å–ª—É—à–∞—Ç—å –ø–µ—Å–Ω—é",
			value='{}'.format(starts), 
			inline=False)
		embed.add_field(
			name="–ó–∞–∫–æ–Ω—á–∏—Ç —Å–ª—É—à–∞—Ç—å –ø–µ—Å–Ω—é", 
			value='{}'.format(endtime), 
			inline=False)
		embed.add_field(
			name="–ù–∞—á–∞–ª —Å–ª—É—à–∞—Ç—å", 
			value='{}'.format(sttime), inline=False)
		embed.set_thumbnail(url = spot.album_cover_url)

		await ctx.send(embed = embed)
	@commands.command(name="–†–æ–ª—å –∏–Ω—Ñ–æ",
		aliases=["roleinfo", "role", "—Ä–æ–ª—å–∏–Ω—Ñ–æ"],
		usage="roleinfo <@role>",
		brief="–ò–Ω—Ñ–∞ –æ —Ä–æ–ª–∏"
		)
	async def roleinfo(self, ctx, role: discord.Role=None):
		date = role.created_at
		dates = date.strftime('%d.%m.%Y')
		if role is None:
			await ctx.send(embed=discord.Embed(
				title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–æ–ª–∏",
				description="–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —Ä–æ–ª—å!",
				colour=discord.Color.red()))
		else:
			try:
				guild=ctx.guild
				emb=discord.Embed(
					title='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–æ–ª–∏ {}'.format(role.name),
					colour=role.color)
				emb.add_field(
					name='–†–æ–ª—å —Å–æ–∑–¥–∞–Ω–∞',
					value='{}'.format(dates)
					)
				emb.add_field(name='–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏', 
					value=role.name, 
					inline=False)
				emb.add_field(name='–ê–π–¥–∏ —Ä–æ–ª–∏', 
					value=role.id, 
					inline=False)
				emb.add_field(name="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —ç—Ç–æ–π —Ä–æ–ª—å—é",
					value=len(role.members),
					inline=False)
				emb.add_field(name='–ü–æ–∑–∏—Ü–∏—è —Ä–æ–ª–∏', value=role.position)
				await ctx.send(embed=emb)
			except:
				await ctx.send(
					embed=discord.Embed(
						title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–æ–ª–∏",
						description="–£–ø—Å, –ø–æ—Ö–æ–∂–µ —á—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫",
						colour=discord.Color.red()
						)
					)
	@roleinfo.error
	async def roleinfo_error(self, ctx, error):
		if isinstance(error, commands.UserInputError):
			await ctx.send(
				embed=discord.Embed(
					title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–æ–ª–∏",
					description="–í—ã –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–ª–∏ —Ä–æ–ª—å!",
					colour=discord.Color.red()
					)
				)
	@commands.command(aliases=["—Å–µ—Ä–≤–µ—Ä", "serverinfo"])
	async def server(self, ctx):
		online = len(list(filter(lambda m: m.status == discord.Status.online, ctx.guild.members)))
		offline = len(list(filter(lambda m: m.status == discord.Status.offline, ctx.guild.members)))
		dnd = len(list(filter(lambda m: m.status == discord.Status.do_not_disturb, ctx.guild.members)))
		idle = len(list(filter(lambda m: m.status == discord.Status.idle, ctx.guild.members)))
		voice = len(ctx.guild.voice_channels)
		textchans = len(ctx.guild.text_channels) 
		channels = len(ctx.guild.channels)
		allmembers = ctx.guild.member_count
		date = ctx.guild.created_at
		dates = date.strftime('%H:%M %d.%m.%Y–≥')
		reg = {
			"russia":"üá∑üá∫ –†–æ—Å—Å–∏—è",
			"brazil":"üáßüá∑ –ë—Ä–∞–∑–∏–ª–∏—è",
			"europe":"üá™üá∫ –ï–≤—Ä–æ–ø–∞",
			"hongkong":"üá≠üá∞ –ì–æ–Ω–∫–æ–Ω–≥",
			"india":"üáÆüá≥ –ò–Ω–¥–∏—è",
			"japan":"üáØüáµ –Ø–ø–æ–Ω–∏—è",
			"singapore":"üá∏üá¨ –°–∏–Ω–≥–∞–ø—É—Ä",
			"sydney":"üá¶üá∫ –°–∏–¥–Ω–µ–π",
			"southafrica":"üáøüá¶ –Æ–∂–Ω–æ-–ê—Ñ—Ä–∏–∫–∞–Ω—Å–∫–∞—è —Ä–µ—Å–ø—É–±–ª–∏–∫–∞",
			"us-central":"üá∫üá∏ –¶–µ–Ω—Ç—Ä –°–®–ê",
			"us-east":"üá∫üá∏ –í–æ—Å—Ç–æ–∫ –°–®–ê",
			"us-south":"üá∫üá∏ –Æ–≥ –°–®–ê",
			"us-west":"üá∫üá∏ –ó–∞–ø–∞–¥ –°–®–ê"
		}
		emb = discord.Embed(
			title=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ {ctx.guild.name}",
			colour=discord.Color.red()
			)
		emb.add_field(
			name="–°–æ–∑–¥–∞—Ç–µ–ª—å",
			value=f"{ctx.guild.owner}"
			)
		emb.add_field(
			name="–ò–º—è —Å–µ—Ä–≤–µ—Ä–∞",
			value=ctx.guild.name
			)
		emb.add_field(
			name="–ê–π–¥–∏ —Å–µ—Ä–≤–µ—Ä–∞",
			value=ctx.guild.id,
			inline=False
			)
		emb.add_field(
			name = "–£—á–∞—Å—Ç–Ω–∏–∫–∏",
			value= f"""–í—Å–µ—Ö: {allmembers}
–ë–æ—Ç–æ–≤: {len(list(filter(lambda m: m.bot, ctx.guild.members)))}
–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {len(list(filter(lambda m: not(m.bot), ctx.guild.members)))}""")
		emb.add_field(
			name = "–ü–æ —Å—Ç–∞—Ç—É—Å–∞–º",
			value= f"""<:online:780463989019901992>–û–Ω–ª–∞–π–Ω: {online}
<:idle:780464095899811840>–ù–µ –∞–∫—Ç–∏–≤–µ–Ω: {idle}
<:dnd:780464026143555644>–ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å: {dnd}
<:offline:780464057390989322>–û—Ñ—Ñ–ª–∞–π–Ω: {offline}"""
			)
		emb.add_field(
			name="–ö–∞–Ω–∞–ª—ã:",
			value=f"""–¢–µ–∫—Å—Ç–æ–≤—ã—Ö: {textchans}
–ì–æ–ª–æ—Å–æ–≤—ã—Ö: {voice}
–í—Å–µ–≥–æ: {channels}""",
		inline=False
			)
		

		emb.add_field(
			name="–†–µ–≥–∏–æ–Ω —Å–µ—Ä–≤–µ—Ä–∞",
			value=reg[str(ctx.guild.region)]
		)
		system_channel = ctx.guild.system_channel
		if str(ctx.guild.system_channel) == "None":
			system_channel = "–ù–µ—É–∫–∞–∑–∞–Ω–æ"
			
		emb.add_field(
			name="–°–∏—Å—Ç–µ–º–Ω—ã–π –∫–∞–Ω–∞–ª",
			value=system_channel
		)		
		emb.add_field(
			name="–ë—É—Å—Ç–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ",
			value=len(ctx.guild.premium_subscribers)
			)
		emb.add_field(
			name="–í—Å–µ–≥–æ —Ä–æ–ª–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ ",
			value=len(ctx.guild.roles)
			)
		verlvl = {
			"low":"–ù–∏–∑–∫–∏–π",
			"medium":"–°—Ä–µ–¥–Ω–∏–π",
			"high":"–í—ã—Å–æ–∫–∏–π",
			"extreme":"–°–∞–º—ã–π –≤—ã—Å–æ–∫–∏–π",
			"none":"–ù–µ—Ç—É"
		}

		emb.add_field(
			name="–£—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–≤–µ—Ä–∫–∏",
			value=verlvl[str(ctx.guild.verification_level)]
			)
		emb.set_footer(text="–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è {}".format(dates))
		emb.set_thumbnail(url=ctx.guild.icon_url)
		await ctx.send(embed=emb)
	@commands.command(
		name="–ò–Ω—Ñ–∞ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ",
		aliases=["userinfo", "user", "—é–∑–µ—Ä"],
		usage="userinfo <@user>",
		brief="–ò–Ω—Ñ–∞ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ" 
		)
	async def userinfo(self, ctx, member:discord.Member=None):
		
		
		member = member or ctx.author
		joined = member.joined_at
		cr = member.created_at
		created = cr.strftime('%H:%M %d.%m.%Y–≥')
		join = joined.strftime('%H:%M %d.%m.%Y–≥')
		try:
			emb = Embed(
				title=f"–ò–Ω—Ñ–∞ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {member}",
				colour=member.color
				)
			emb.set_thumbnail(url=member.avatar_url)
			stik = {
				"dnd":"<:dnd:780464026143555644>–ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å",
				"idle":"<:idle:780464095899811840>–ù–µ –∞–∫—Ç–∏–≤–µ–Ω",
				"offline":"<:offline:780464057390989322>–û—Ñ—Ñ–ª–∞–π–Ω",
				"online":"<:online:780463989019901992>–û–Ω–ª–∞–π–Ω"
			}
			emb.add_field(
				name="–°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
				value=stik[str(member.status)],
				inline=False
				)
			emb.add_field(
				name="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
				value=str(member.name)
				)
			emb.add_field(
				name="–¢–µ–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
				value=str(member.discriminator)
				)
			emb.add_field(
				name="–ò–º—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ",
				value=str(member.display_name)
				)
			emb.add_field(
				name="–î–∞—Ç—ã",
				value=f"""üëã –ó–∞—à–µ–ª: {join}
üòé –°–æ–∑–¥–∞–ª –∞–∫–∫–∞—É–Ω—Ç: {created}""",
				inline=False)
			emb.add_field(name="–í—ã—Å—à–∞—è —Ä–æ–ª—å", 
				value=f"{member.top_role.mention}")
			emb.add_field(
				name="–í—Å–µ–≥–æ —Ä–æ–ª–µ–π",
				value=len(member.roles)
				)
			emb.set_footer(text=f"ID: {member.id}")
			await ctx.send(embed=emb)

		except:
			await ctx.send(
				embed= discord.Embed(
					title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ",
					description="–ú—ã –Ω–µ —Å–º–æ–≥–ª–∏ —Å–æ–±—Ä–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ :(",
					colour=Color.red()
					)
				)
	@userinfo.error
	async def userinfo_error(self, ctx, error):
		if isinstance(error, commands.UserInputError):
			await ctx.send(
				embed=discord.Embed(
					title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ",
					description="–í—ã –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–ª–∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!",
					colour=discord.Color.red()
					))
	@commands.command(
		aliases=['–≤–∏–∫–∏', 'wiki', "wikipedia", "–≤–∏–∫–∏–ø–µ–¥–∏—è"],
		description='—É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞ –≤–∏–∫–∏',
		usage='–≤–∏–∫–∏ <–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è>'
	)
	async def _wiki(self, ctx, *, text=None):
		if text is None:
			await ctx.send(
				embed=discord.Embed(
					title="–ù–∞–π—Ç–∏ –≤ –≤–∏–∫–∏–ø–µ–¥–∏–∏",
					description="–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∑–∞–ø—Ä–æ—Å –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏",
					color=0x00ffff
					)
				)
		else:
			try:
				wikipedia.set_lang("ru")
				new_page = wikipedia.page(text)
				summ = wikipedia.summary(text)
				emb = Embed(
					title= new_page.title,
					description= summ,
					color = 0x00ffff
				 )
				emb.set_author(name= '–ë–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Ç—É—Ç!', url= new_page.url, icon_url= 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/80/Wikipedia-logo-v2.svg/1200px-Wikipedia-logo-v2.svg.png%27')

				await ctx.send(embed=emb)
			except:
				await ctx.send(
					embed=Embed(
						title="–ù–∞–π—Ç–∏ –≤ –≤–∏–∫–∏–ø–µ–¥–∏–∏",
						description="–ú—ã –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ –Ω–∏—á–µ–≥–æ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É :(",
						color=0x00ffff
						)
					)

	@commands.command(aliases=["–ø–æ–≥–æ–¥–∞"])
	async def weather(self, ctx,  *, place = None):
		try:
			if place is None:
				await ctx.send(
					embed = Embed(
						title="üå§Ô∏è–ü–æ–≥–æ–¥–∞",
						description="–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –≥–æ—Ä–æ–¥!",
						colour=Color.red()
						)
					)
			else:
				data = get(f"http://api.openweathermap.org/data/2.5/weather?q={place}&units=metric&APPID=fb9df86d9c484eba8a69269cfb0beac9&lang=ru").json()
				cleared_data = {
					'–ú–µ—Å—Ç–æ': data['name'],
					'–ü–æ–≥–æ–¥–∞': f"{data['weather'][0]['description']}",
					'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞': f"{data['main']['temp']}¬∞C",
					'–û—â—É—â–∞–µ—Ç—å—Å—è –∫–∞–∫': f"{data['main']['feels_like']}¬∞C",
					'–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞': f"{data['main']['temp_min']}¬∞C",
					'–ú–∞–∫–∏—Å–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞': f"{data['main']['temp_max']}¬∞C",
					'–í–ª–∞–∂–Ω–æ—Å—Ç—å': f"{data['main']['humidity']}%",
					'–û–±–ª–∞–∫–∞': f"{data['clouds']['all']}%",
					'–í–µ—Ç–µ—Ä': f"{data['wind']['speed']} –º/—Å",
				}
				embed = Embed(
					title = f"üå§Ô∏è –ü–æ–≥–æ–¥–∞ –≤ {cleared_data['–ú–µ—Å—Ç–æ']}", 
					color = 0x3498db
					)
				for key, value in cleared_data.items():
					embed.add_field(
						name = key, 
						value = value
						)
				await ctx.send(embed = embed)
		except:
			await ctx.send(
				embed=Embed(
					title="üå§Ô∏è–ü–æ–≥–æ–¥–∞",
					description=f'–ú—ã –Ω–µ—Å–º–æ–ª–∏ –Ω–∞–π—Ç–∏ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –≤ –≥–æ—Ä–æ–¥–µ "{place}"',
					colour=Color.red()
					)
				)
	@commands.command()
	async def google(self, ctx, *, question = None):
		if question is None:
			await ctx.send('–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å!')
		else:
			await ctx.send('–ü–æ–¥–æ–∂–¥–∏—Ç–µ!')

			url = f'https://www.google.com/search?b-d&q=' + str(question).replace(' ', '+')
			headers = {
				'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; Win64; x64; rv:79.0) Gecko/20100101 Firefox/79.0',
				'accept': '*/*'
			}

			r = requests.get(url, headers = headers)
			soup = BeautifulSoup(r.content, 'html.parser')
			items = soup.findAll('div', class_ = "rc")

			comps = []

			for item in items:
				comps.append({
						'link': item.find('a').get('href'),
						'title': item.find('h3', class_ = 'LC20lb DKV0Md').get_text(strip = True)
					})
				await asyncio.sleep(3)

			emb = discord.Embed(colour=Color.blue())
			
			counter = 0
			for comp in comps:
				counter += 1

				emb.add_field(
						name = f'[{counter}]	> #'  + comp['title'],

						value =  '| ' + comp['link'],
						inline = False
					)


			emb.set_author(name = '{}'.format(ctx.author), icon_url = '{}'.format(ctx.author.avatar_url))
			await ctx.send(embed = emb)
	@commands.command(aliases=['—Å–∫–∞–∑–∞—Ç—å'])
	@commands.has_permissions(manage_messages=True)
	async def say(self, ctx, *, arg=None):
		await ctx.message.delete()
		try:
			if arg is None:
				await ctx.send(
					embed=Embed(
						title="–°–∫–∞–∑–∞—Ç—å",
						description="–í—ã –Ω–µ –≤–≤–µ–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ",
						colour=Color.red()
						)
					)
			else:
				files = []
				for file in ctx.message.attachments:
					fp = io.BytesIO()
					await file.save(fp)
					files.append(discord.File(fp, filename = file.filename, spoiler = file.is_spoiler()))
				await ctx.send(files = files, content=arg)
		except:
			await ctx.send(
				embed=Embed(
					title="–°–∫–∞–∑–∞—Ç—å",
					description="–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...",
					colour=Color.red()
					)
				)
	@say.error
	async def say_error(self, ctx, error):
		if isinstance(error, commands.MissingPermissions):
			await ctx.send(embed=discord.Embed(
				title=':x:–û—à–∏–±–∫–∞',
				description=f"""–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã say
	–ù—É–∂–Ω—ã–µ –ø—Ä–∞–≤–∞: –£–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏""", 
				colour=discord.Color.red()),
				delete_after=10
				)
	@commands.command()
	@commands.has_permissions(manage_channels=True)
	async def slowmode(self, ctx, value:int=None):
		if value is None:
			embed = discord.Embed(title="–°–ª–æ—É–º–æ–¥",
				description=f"–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª-–≤–æ —Å–µ–∫—É–Ω–¥ `{ctx.prefix}slowmode <value>`", 
				color=discord.Color.red())
			await ctx.send(embed=embed)
		elif value > 21600:
			embed = discord.Embed(title="–û—à–∏–±–∫–∞", description="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ —Å–µ–∫—É–Ω–¥: 21600", color=discord.Color.red())
			await ctx.send(embed=embed)
		else:
			channel = ctx.channel
			await channel.edit(slowmode_delay=value)

			if value == 1:
				sec = '—Å–µ–∫—É–Ω–¥—É'
			elif value == 2 or value == 3 or value == 4:
				sec = '—Å–µ–∫—É–Ω–¥—ã'
			else:
				sec = '—Å–µ–∫—É–Ω–¥'

			embed = discord.Embed(title="–°–ª–æ—É–º–æ–¥", description=f"–ü–æ—Å—Ç–∞–≤–ª–µ–Ω —Å–ª–æ—É–º–æ–¥ –Ω–∞ **{value}** {sec}, –≤ {ctx.channel.mention}", color=discord.Color.green())
			await ctx.send(embed=embed)
	@commands.command()
	async def bot(self, ctx):
		emb = discord.Embed(
			colour=discord.Color.gold()
			)
		emb.add_field(
			name="–ú–µ–Ω—è –∑–æ–≤—É—Ç LimonixBot",
			value=f"""–Ø –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ —è–∑—ã–∫–µ: Python
–ú–µ–Ω—è —Å–æ–∑–¥–∞–ª: {self.client.owner},
–Ø —Å–æ—Å—Ç–æ—é –Ω–∞ {len(self.client.guilds)}
–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(set(self.client.get_all_members()))}
			"""
			)
		emb.set_thumbnail(url=self.client.user.avatar_url)
		await ctx.send(embed=emb)

	# @commands.command()
	# async def test(self, ctx):

	# 	file = discord.File("./fortnite.jpg", filename="fortnite.jpg")
	# 	embed = discord.Embed(
	# 		title="gg"
	# 		)
	# 	embed.set_image(url="attachment://fortnite.jpg")
	# 	await ctx.send(file=file, embed=embed)
def setup(client):
	client.add_cog(Utilite(client))